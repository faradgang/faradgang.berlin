---
import Layout from "./Layout.astro";
import AlternatingContainer from "../components/AlternatingContainer.astro";
import Hero from "../components/Hero.astro";
import ContentCard from "../components/ContentCard.astro";
import ContentContainer from "../components/ContentContainer.astro";
import type { MarkdownLayoutProps } from "astro";
import logoBig from "../assets/faradgang_logo_big.svg?raw";
import wheel from "../assets/wheel.svg?raw";
import bell from "../assets/bell.svg?raw";
import cart from "../assets/cart.svg?raw";
import backlight from "../assets/backlight.svg?raw";
import pedal from "../assets/pedal.svg?raw";
import dynamo from "../assets/dynamo.svg?raw";
import brakes from "../assets/brakes.svg?raw";

const { compiledContent, headings } = Astro.props as MarkdownLayoutProps<{}>;

const splitByHeadings = compiledContent().split(/(?=\n<h)/);
const contentWithoutHeadings = splitByHeadings.map((content) =>
  content.split(/(?=\d>\n)/)[1].slice(3),
);
---

<script>
  import { addScrollingHook } from "../utils";
  const target = document.getElementById("scrollingBackground");
  if (target) {
    const scrollEffect = () => {
      const scrollTop = document.scrollingElement?.scrollTop;
      if (scrollTop) target.style.top = `${-0.2 * scrollTop}px`;
    };
    addScrollingHook(scrollEffect);
  }
</script>

<Layout title="Faradgang Berlin e.V.">
  <Hero isLanding={true}>
    <div
      style="height:100%; width:100%; max-height: 30rem; max-width: 30rem"
      set:html={logoBig}
      aria-label="A childishly drawn bicycle, representing the faradgang logo."
    />
  </Hero>

  <ContentContainer>
    <div id="scrollingBackground">
      <div
        style="width:calc(5rem + 6vw);position:absolute;right:0%;top:7rem"
        set:html={wheel}
      />
      <div
        style="width:calc(2rem + 6vw);position:absolute;right:15%;top:25rem"
        set:html={bell}
      />
      <div
        style="width:calc(8rem + 6vw);position:absolute;left:0%;top:32rem"
        set:html={cart}
      />
      <div
        style="width:calc(2rem + 6vw);position:absolute;right:5%;top:62rem"
        set:html={backlight}
      />
      <div
        style="width:calc(3rem + 6vw);position:absolute;left:0%;top:75rem"
        set:html={pedal}
      />
      <div
        style="width:calc(2rem + 6vw);position:absolute;left:15%;top:90rem"
        set:html={dynamo}
      />
      <div
        style="width:calc(5rem + 6vw);position:absolute;right:0%;top:130rem"
        set:html={brakes}
      />
    </div>
    <AlternatingContainer>
      {
        contentWithoutHeadings.map((content, idx) => (
          <ContentCard>
            {headings[idx].depth === 1 ? (
              <h1 slot="header" id={headings[idx].slug}>
                {headings[idx].text}
              </h1>
            ) : (
              <h2 slot="header" id={headings[idx].slug}>
                {headings[idx].text}
              </h2>
            )}
            <div set:html={content} />
          </ContentCard>
        ))
      }
    </AlternatingContainer>
  </ContentContainer>
</Layout>

<style>
  #scrollingBackground {
    position: relative;
    z-index: -1;
    color: rgb(50, 50, 30);
    width: 100%;
    left: 0;
  }
</style>
